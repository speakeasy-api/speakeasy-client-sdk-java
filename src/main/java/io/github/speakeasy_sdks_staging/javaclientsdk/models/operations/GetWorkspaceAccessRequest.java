/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package io.github.speakeasy_sdks_staging.javaclientsdk.models.operations;

import io.github.speakeasy_sdks_staging.javaclientsdk.utils.SpeakeasyMetadata;
import io.github.speakeasy_sdks_staging.javaclientsdk.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.util.Optional;


public class GetWorkspaceAccessRequest {

    /**
     * Unique identifier of the generation target.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=genLockId")
    private Optional<? extends String> genLockId;

    public GetWorkspaceAccessRequest(
            Optional<? extends String> genLockId) {
        Utils.checkNotNull(genLockId, "genLockId");
        this.genLockId = genLockId;
    }

    /**
     * Unique identifier of the generation target.
     */
    public Optional<? extends String> genLockId() {
        return genLockId;
    }
    
    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Unique identifier of the generation target.
     */
    public GetWorkspaceAccessRequest withGenLockId(String genLockId) {
        Utils.checkNotNull(genLockId, "genLockId");
        this.genLockId = Optional.ofNullable(genLockId);
        return this;
    }
    
    /**
     * Unique identifier of the generation target.
     */
    public GetWorkspaceAccessRequest withGenLockId(Optional<? extends String> genLockId) {
        Utils.checkNotNull(genLockId, "genLockId");
        this.genLockId = genLockId;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetWorkspaceAccessRequest other = (GetWorkspaceAccessRequest) o;
        return 
            java.util.Objects.deepEquals(this.genLockId, other.genLockId);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            genLockId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetWorkspaceAccessRequest.class,
                "genLockId", genLockId);
    }
    
    public final static class Builder {
 
        private Optional<? extends String> genLockId = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Unique identifier of the generation target.
         */
        public Builder genLockId(String genLockId) {
            Utils.checkNotNull(genLockId, "genLockId");
            this.genLockId = Optional.ofNullable(genLockId);
            return this;
        }
        
        /**
         * Unique identifier of the generation target.
         */
        public Builder genLockId(Optional<? extends String> genLockId) {
            Utils.checkNotNull(genLockId, "genLockId");
            this.genLockId = genLockId;
            return this;
        }
        
        public GetWorkspaceAccessRequest build() {
            return new GetWorkspaceAccessRequest(
                genLockId);
        }
    }
}

