/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package io.github.speakeasy_sdks_staging.javaclientsdk.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import io.github.speakeasy_sdks_staging.javaclientsdk.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
/**
 * SuggestOperationIDsSuggestion - OK
 */

public class SuggestOperationIDsSuggestion {

    @JsonProperty("operation_ids")
    private java.util.Map<String, java.util.List<String>> operationIds;

    @JsonCreator
    public SuggestOperationIDsSuggestion(
            @JsonProperty("operation_ids") java.util.Map<String, java.util.List<String>> operationIds) {
        operationIds = Utils.emptyMapIfNull(operationIds);
        this.operationIds = operationIds;
    }

    @JsonIgnore
    public java.util.Map<String, java.util.List<String>> operationIds() {
        return operationIds;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public SuggestOperationIDsSuggestion withOperationIds(java.util.Map<String, java.util.List<String>> operationIds) {
        Utils.checkNotNull(operationIds, "operationIds");
        this.operationIds = operationIds;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SuggestOperationIDsSuggestion other = (SuggestOperationIDsSuggestion) o;
        return 
            java.util.Objects.deepEquals(this.operationIds, other.operationIds);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            operationIds);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SuggestOperationIDsSuggestion.class,
                "operationIds", operationIds);
    }
    
    public final static class Builder {
 
        private java.util.Map<String, java.util.List<String>> operationIds;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder operationIds(java.util.Map<String, java.util.List<String>> operationIds) {
            Utils.checkNotNull(operationIds, "operationIds");
            this.operationIds = operationIds;
            return this;
        }
        
        public SuggestOperationIDsSuggestion build() {
            return new SuggestOperationIDsSuggestion(
                operationIds);
        }
    }
}

