/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package io.github.speakeasy_sdks_staging.javaclientsdk.models.operations;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.type.TypeReference;
import io.github.speakeasy_sdks_staging.javaclientsdk.utils.SpeakeasyMetadata;
import io.github.speakeasy_sdks_staging.javaclientsdk.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class GetTagsRequest {

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=namespace_name")
    private String namespaceName;

    public GetTagsRequest(
            String namespaceName) {
        Utils.checkNotNull(namespaceName, "namespaceName");
        this.namespaceName = namespaceName;
    }

    public String namespaceName() {
        return namespaceName;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public GetTagsRequest withNamespaceName(String namespaceName) {
        Utils.checkNotNull(namespaceName, "namespaceName");
        this.namespaceName = namespaceName;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetTagsRequest other = (GetTagsRequest) o;
        return 
            java.util.Objects.deepEquals(this.namespaceName, other.namespaceName);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            namespaceName);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetTagsRequest.class,
                "namespaceName", namespaceName);
    }
    
    public final static class Builder {
 
        private String namespaceName;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder namespaceName(String namespaceName) {
            Utils.checkNotNull(namespaceName, "namespaceName");
            this.namespaceName = namespaceName;
            return this;
        }
        
        public GetTagsRequest build() {
            return new GetTagsRequest(
                namespaceName);
        }
    }
}

