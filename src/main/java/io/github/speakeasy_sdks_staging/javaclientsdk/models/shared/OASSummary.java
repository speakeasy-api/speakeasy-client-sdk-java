/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package io.github.speakeasy_sdks_staging.javaclientsdk.models.shared;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import io.github.speakeasy_sdks_staging.javaclientsdk.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;

public class OASSummary {

    @JsonProperty("info")
    private OASInfo info;

    @JsonProperty("operations")
    private java.util.List<OASOperation> operations;

    @JsonCreator
    public OASSummary(
            @JsonProperty("info") OASInfo info,
            @JsonProperty("operations") java.util.List<OASOperation> operations) {
        Utils.checkNotNull(info, "info");
        Utils.checkNotNull(operations, "operations");
        this.info = info;
        this.operations = operations;
    }

    @JsonIgnore
    public OASInfo info() {
        return info;
    }

    @JsonIgnore
    public java.util.List<OASOperation> operations() {
        return operations;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public OASSummary withInfo(OASInfo info) {
        Utils.checkNotNull(info, "info");
        this.info = info;
        return this;
    }

    public OASSummary withOperations(java.util.List<OASOperation> operations) {
        Utils.checkNotNull(operations, "operations");
        this.operations = operations;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OASSummary other = (OASSummary) o;
        return 
            java.util.Objects.deepEquals(this.info, other.info) &&
            java.util.Objects.deepEquals(this.operations, other.operations);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            info,
            operations);
    }
    
    @Override
    public String toString() {
        return Utils.toString(OASSummary.class,
                "info", info,
                "operations", operations);
    }
    
    public final static class Builder {
 
        private OASInfo info;
 
        private java.util.List<OASOperation> operations;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder info(OASInfo info) {
            Utils.checkNotNull(info, "info");
            this.info = info;
            return this;
        }

        public Builder operations(java.util.List<OASOperation> operations) {
            Utils.checkNotNull(operations, "operations");
            this.operations = operations;
            return this;
        }
        
        public OASSummary build() {
            return new OASSummary(
                info,
                operations);
        }
    }
}

