/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package dev.speakeasyapi.javaclientsdk.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import dev.speakeasyapi.javaclientsdk.models.shared.SuggestRequestBody;
import dev.speakeasyapi.javaclientsdk.utils.SpeakeasyMetadata;
import dev.speakeasyapi.javaclientsdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class SuggestRequest {

    /**
     * The OAS summary and diagnostics to use for the suggestion.
     */
    @SpeakeasyMetadata("request:mediaType=application/json")
    private SuggestRequestBody suggestRequestBody;

    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-session-id")
    private String xSessionId;

    @JsonCreator
    public SuggestRequest(
            SuggestRequestBody suggestRequestBody,
            String xSessionId) {
        Utils.checkNotNull(suggestRequestBody, "suggestRequestBody");
        Utils.checkNotNull(xSessionId, "xSessionId");
        this.suggestRequestBody = suggestRequestBody;
        this.xSessionId = xSessionId;
    }

    /**
     * The OAS summary and diagnostics to use for the suggestion.
     */
    @JsonIgnore
    public SuggestRequestBody suggestRequestBody() {
        return suggestRequestBody;
    }

    @JsonIgnore
    public String xSessionId() {
        return xSessionId;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The OAS summary and diagnostics to use for the suggestion.
     */
    public SuggestRequest withSuggestRequestBody(SuggestRequestBody suggestRequestBody) {
        Utils.checkNotNull(suggestRequestBody, "suggestRequestBody");
        this.suggestRequestBody = suggestRequestBody;
        return this;
    }

    public SuggestRequest withXSessionId(String xSessionId) {
        Utils.checkNotNull(xSessionId, "xSessionId");
        this.xSessionId = xSessionId;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SuggestRequest other = (SuggestRequest) o;
        return 
            Objects.deepEquals(this.suggestRequestBody, other.suggestRequestBody) &&
            Objects.deepEquals(this.xSessionId, other.xSessionId);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            suggestRequestBody,
            xSessionId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SuggestRequest.class,
                "suggestRequestBody", suggestRequestBody,
                "xSessionId", xSessionId);
    }
    
    public final static class Builder {
 
        private SuggestRequestBody suggestRequestBody;
 
        private String xSessionId;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The OAS summary and diagnostics to use for the suggestion.
         */
        public Builder suggestRequestBody(SuggestRequestBody suggestRequestBody) {
            Utils.checkNotNull(suggestRequestBody, "suggestRequestBody");
            this.suggestRequestBody = suggestRequestBody;
            return this;
        }

        public Builder xSessionId(String xSessionId) {
            Utils.checkNotNull(xSessionId, "xSessionId");
            this.xSessionId = xSessionId;
            return this;
        }
        
        public SuggestRequest build() {
            return new SuggestRequest(
                suggestRequestBody,
                xSessionId);
        }
    }
}

