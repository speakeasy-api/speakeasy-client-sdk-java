/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package dev.speakeasyapi.javaclientsdk.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import dev.speakeasyapi.javaclientsdk.utils.Utils;
import java.io.InputStream;


public class ApiKeyDetails {

    @JsonProperty("workspace_id")
    private String workspaceId;

    public ApiKeyDetails(
            @JsonProperty("workspace_id") String workspaceId) {
        Utils.checkNotNull(workspaceId, "workspaceId");
        this.workspaceId = workspaceId;
    }

    public String workspaceId() {
        return workspaceId;
    }
    
    public final static Builder builder() {
        return new Builder();
    }

    public ApiKeyDetails withWorkspaceId(String workspaceId) {
        Utils.checkNotNull(workspaceId, "workspaceId");
        this.workspaceId = workspaceId;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ApiKeyDetails other = (ApiKeyDetails) o;
        return 
            java.util.Objects.deepEquals(this.workspaceId, other.workspaceId);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            workspaceId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ApiKeyDetails.class,
                "workspaceId", workspaceId);
    }
    
    public final static class Builder {
 
        private String workspaceId;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder workspaceId(String workspaceId) {
            Utils.checkNotNull(workspaceId, "workspaceId");
            this.workspaceId = workspaceId;
            return this;
        }        
        
        public ApiKeyDetails build() {
            return new ApiKeyDetails(
                workspaceId);
        }
    }
}

