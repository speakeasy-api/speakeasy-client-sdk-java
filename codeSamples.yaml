overlay: 1.0.0
info:
  title: CodeSamples overlay for java target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/artifacts/namespaces"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getNamespaces
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetNamespacesResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetNamespacesResponse res = sdk.artifacts().getNamespaces()
                            .call();

                    if (res.getNamespacesResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/artifacts/namespaces/{namespace_name}/revisions"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getRevisions
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetRevisionsRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetRevisionsResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetRevisionsRequest req = GetRevisionsRequest.builder()
                            .namespaceName("<value>")
                            .build();

                    GetRevisionsResponse res = sdk.artifacts().getRevisions()
                            .request(req)
                            .call();

                    if (res.getRevisionsResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/artifacts/namespaces/{namespace_name}/tags"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getTags
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetTagsRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetTagsResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetTagsRequest req = GetTagsRequest.builder()
                            .namespaceName("<value>")
                            .build();

                    GetTagsResponse res = sdk.artifacts().getTags()
                            .request(req)
                            .call();

                    if (res.getTagsResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/artifacts/namespaces/{namespace_name}/tags"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: postTags
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.PostTagsRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.PostTagsResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    PostTagsRequest req = PostTagsRequest.builder()
                            .namespaceName("<value>")
                            .build();

                    PostTagsResponse res = sdk.artifacts().postTags()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/artifacts/namespaces/{namespace_name}/visibility"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: setVisibility
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.SetVisibilityRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.SetVisibilityResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    SetVisibilityRequest req = SetVisibilityRequest.builder()
                            .namespaceName("<value>")
                            .build();

                    SetVisibilityResponse res = sdk.artifacts().setVisibility()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/artifacts/preflight"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: preflight
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.PreflightResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.PreflightRequest;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    PreflightRequest req = PreflightRequest.builder()
                            .namespaceName("<value>")
                            .build();

                    PreflightResponse res = sdk.artifacts().preflight()
                            .request(req)
                            .call();

                    if (res.preflightToken().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/artifacts/remote_sources"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: listRemoteSources
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.ListRemoteSourcesRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.ListRemoteSourcesResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    ListRemoteSourcesRequest req = ListRemoteSourcesRequest.builder()
                            .namespaceName("<value>")
                            .build();

                    ListRemoteSourcesResponse res = sdk.artifacts().listRemoteSources()
                            .request(req)
                            .call();

                    if (res.remoteSource().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/artifacts/remote_sources"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: createRemoteSource
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.CreateRemoteSourceResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.RemoteDocument;
            import dev.speakeasyapi.javaclientsdk.models.shared.RemoteSource;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;
            import java.util.List;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    RemoteSource req = RemoteSource.builder()
                            .inputs(List.of(
                                RemoteDocument.builder()
                                    .registryUrl("https://productive-swine.net")
                                    .build()))
                            .output(RemoteDocument.builder()
                                .registryUrl("https://spiteful-apricot.info")
                                .build())
                            .build();

                    CreateRemoteSourceResponse res = sdk.artifacts().createRemoteSource()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/auth/access_token"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getAccessToken
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetAccessTokenRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetAccessTokenResponse;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                        .build();

                    GetAccessTokenRequest req = GetAccessTokenRequest.builder()
                            .workspaceId("<id>")
                            .build();

                    GetAccessTokenResponse res = sdk.auth().getAccessToken()
                            .request(req)
                            .call();

                    if (res.accessToken().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/auth/validate"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: validateApiKey
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.ValidateApiKeyResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    ValidateApiKeyResponse res = sdk.auth().validateApiKey()
                            .call();

                    if (res.apiKeyDetails().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/code_sample/preview"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: generateCodeSamplePreview
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GenerateCodeSamplePreviewResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.CodeSampleSchemaInput;
            import dev.speakeasyapi.javaclientsdk.models.shared.SchemaFile;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;
            import java.nio.charset.StandardCharsets;
            import java.util.List;

            public class Application {

                public static void main(String[] args) throws Error, Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    CodeSampleSchemaInput req = CodeSampleSchemaInput.builder()
                            .languages(List.of(
                                "<value>",
                                "<value>"))
                            .schemaFile(SchemaFile.builder()
                                .fileName("example.file")
                                .content("0xc3dD8BfBef".getBytes(StandardCharsets.UTF_8))
                                .build())
                            .build();

                    GenerateCodeSamplePreviewResponse res = sdk.codeSamples().generateCodeSamplePreview()
                            .request(req)
                            .call();

                    if (res.twoHundredApplicationXYamlResponseStream().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/code_sample/preview/async"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: generateCodeSamplePreviewAsync
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GenerateCodeSamplePreviewAsyncResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.CodeSampleSchemaInput;
            import dev.speakeasyapi.javaclientsdk.models.shared.SchemaFile;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;
            import java.nio.charset.StandardCharsets;
            import java.util.List;

            public class Application {

                public static void main(String[] args) throws Error, Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    CodeSampleSchemaInput req = CodeSampleSchemaInput.builder()
                            .languages(List.of(
                                "<value>",
                                "<value>",
                                "<value>"))
                            .schemaFile(SchemaFile.builder()
                                .fileName("example.file")
                                .content("0xED5CDd177E".getBytes(StandardCharsets.UTF_8))
                                .build())
                            .build();

                    GenerateCodeSamplePreviewAsyncResponse res = sdk.codeSamples().generateCodeSamplePreviewAsync()
                            .request(req)
                            .call();

                    if (res.object().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/code_sample/preview/async/{jobID}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getCodeSamplePreviewAsync
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetCodeSamplePreviewAsyncRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetCodeSamplePreviewAsyncResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetCodeSamplePreviewAsyncRequest req = GetCodeSamplePreviewAsyncRequest.builder()
                            .jobID("<id>")
                            .build();

                    GetCodeSamplePreviewAsyncResponse res = sdk.codeSamples().getCodeSamplePreviewAsync()
                            .request(req)
                            .call();

                    if (res.twoHundredApplicationXYamlResponseStream().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/github/action"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getGitHubAction
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetGitHubActionRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetGitHubActionResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetGitHubActionRequest req = GetGitHubActionRequest.builder()
                            .org("<value>")
                            .repo("<value>")
                            .build();

                    GetGitHubActionResponse res = sdk.github().getAction()
                            .request(req)
                            .call();

                    if (res.githubGetActionResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/github/check_access"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: checkGithubAccess
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.CheckGithubAccessRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.CheckGithubAccessResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    CheckGithubAccessRequest req = CheckGithubAccessRequest.builder()
                            .org("<value>")
                            .repo("<value>")
                            .build();

                    CheckGithubAccessResponse res = sdk.github().checkAccess()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/github/configure_code_samples"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: githubConfigureCodeSamples
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GithubConfigureCodeSamplesResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.GithubConfigureCodeSamplesRequest;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GithubConfigureCodeSamplesRequest req = GithubConfigureCodeSamplesRequest.builder()
                            .org("<value>")
                            .repo("<value>")
                            .targetName("<value>")
                            .build();

                    GithubConfigureCodeSamplesResponse res = sdk.github().configureCodeSamples()
                            .request(req)
                            .call();

                    if (res.githubConfigureCodeSamplesResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/github/configure_mintlify_repo"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: githubConfigureMintlifyRepo
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GithubConfigureMintlifyRepoResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.GithubConfigureMintlifyRepoRequest;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;
            import java.util.List;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GithubConfigureMintlifyRepoRequest req = GithubConfigureMintlifyRepoRequest.builder()
                            .org("<value>")
                            .repo("<value>")
                            .input("<value>")
                            .overlays(List.of(
                                "<value>"))
                            .build();

                    GithubConfigureMintlifyRepoResponse res = sdk.github().configureMintlifyRepo()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/github/configure_target"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: githubConfigureTarget
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GithubConfigureTargetResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.GithubConfigureTargetRequest;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GithubConfigureTargetRequest req = GithubConfigureTargetRequest.builder()
                            .org("<value>")
                            .repoName("<value>")
                            .build();

                    GithubConfigureTargetResponse res = sdk.github().configureTarget()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/github/link"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: linkGithubAccess
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.LinkGithubAccessRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.LinkGithubAccessResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    LinkGithubAccessRequest req = LinkGithubAccessRequest.builder()
                            .build();

                    LinkGithubAccessResponse res = sdk.github().linkGithub()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/github/publishing_prs"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: githubCheckPublishingPRs
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GithubCheckPublishingPRsRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GithubCheckPublishingPRsResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GithubCheckPublishingPRsRequest req = GithubCheckPublishingPRsRequest.builder()
                            .generateGenLockId("<id>")
                            .org("<value>")
                            .repo("<value>")
                            .build();

                    GithubCheckPublishingPRsResponse res = sdk.github().checkPublishingPRs()
                            .request(req)
                            .call();

                    if (res.githubPublishingPRResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/github/publishing_secrets"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: githubCheckPublishingSecrets
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GithubCheckPublishingSecretsRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GithubCheckPublishingSecretsResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GithubCheckPublishingSecretsRequest req = GithubCheckPublishingSecretsRequest.builder()
                            .generateGenLockId("<id>")
                            .build();

                    GithubCheckPublishingSecretsResponse res = sdk.github().checkPublishingSecrets()
                            .request(req)
                            .call();

                    if (res.githubMissingPublishingSecretsResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/github/publishing_secrets"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: githubStorePublishingSecrets
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GithubStorePublishingSecretsResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.GithubStorePublishingSecretsRequest;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GithubStorePublishingSecretsRequest req = GithubStorePublishingSecretsRequest.builder()
                            .generateGenLockId("<id>")
                            .build();

                    GithubStorePublishingSecretsResponse res = sdk.github().storePublishingSecrets()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/github/setup"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getGithubSetupState
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetGithubSetupStateRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetGithubSetupStateResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetGithubSetupStateRequest req = GetGithubSetupStateRequest.builder()
                            .org("<value>")
                            .repo("<value>")
                            .generateGenLockId("<id>")
                            .build();

                    GetGithubSetupStateResponse res = sdk.github().getSetup()
                            .request(req)
                            .call();

                    if (res.githubSetupStateResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/github/trigger_action"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: githubTriggerAction
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GithubTriggerActionResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.GithubTriggerActionRequest;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GithubTriggerActionRequest req = GithubTriggerActionRequest.builder()
                            .org("<value>")
                            .repoName("<value>")
                            .genLockId("<id>")
                            .build();

                    GithubTriggerActionResponse res = sdk.github().triggerAction()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/oci/v2/{organization_slug}/{workspace_slug}/{namespace_name}/blobs/{digest}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getBlob
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetBlobRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetBlobResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetBlobRequest req = GetBlobRequest.builder()
                            .organizationSlug("<value>")
                            .workspaceSlug("<value>")
                            .namespaceName("<value>")
                            .digest("<value>")
                            .build();

                    GetBlobResponse res = sdk.artifacts().getBlob()
                            .request(req)
                            .call();

                    if (res.blob().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/oci/v2/{organization_slug}/{workspace_slug}/{namespace_name}/manifests/{revision_reference}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getManifest
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetManifestRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetManifestResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetManifestRequest req = GetManifestRequest.builder()
                            .organizationSlug("<value>")
                            .workspaceSlug("<value>")
                            .namespaceName("<value>")
                            .revisionReference("<value>")
                            .build();

                    GetManifestResponse res = sdk.artifacts().getManifest()
                            .request(req)
                            .call();

                    if (res.manifest().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/organization"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: createOrganization
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.CreateOrganizationResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.AccountType;
            import dev.speakeasyapi.javaclientsdk.models.shared.Organization;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;
            import java.time.OffsetDateTime;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    Organization req = Organization.builder()
                            .id("<id>")
                            .name("<value>")
                            .slug("<value>")
                            .accountType(AccountType.SCALE_UP)
                            .telemetryDisabled(false)
                            .createdAt(OffsetDateTime.parse("2024-04-02T12:48:32.253Z"))
                            .updatedAt(OffsetDateTime.parse("2023-05-28T06:20:22.766Z"))
                            .ssoActivated(true)
                            .build();

                    CreateOrganizationResponse res = sdk.organizations().create()
                            .request(req)
                            .call();

                    if (res.organization().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/organization/free_trial"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: createFreeTrial
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.CreateFreeTrialResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    CreateFreeTrialResponse res = sdk.organizations().createFreeTrial()
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/organization/usage"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getOrganizationUsage
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetOrganizationUsageResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetOrganizationUsageResponse res = sdk.organizations().getUsage()
                            .call();

                    if (res.organizationUsageResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/organization/{organizationID}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getOrganization
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetOrganizationRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetOrganizationResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetOrganizationRequest req = GetOrganizationRequest.builder()
                            .organizationID("<id>")
                            .build();

                    GetOrganizationResponse res = sdk.organizations().get()
                            .request(req)
                            .call();

                    if (res.organization().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/organizations"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getOrganizations
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetOrganizationsResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetOrganizationsResponse res = sdk.organizations().getAll()
                            .call();

                    if (res.organizations().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/reports"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: uploadReport
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.operations.File;
            import dev.speakeasyapi.javaclientsdk.models.operations.UploadReportRequestBody;
            import dev.speakeasyapi.javaclientsdk.models.operations.UploadReportResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Report;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;
            import java.nio.charset.StandardCharsets;

            public class Application {

                public static void main(String[] args) throws Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    UploadReportRequestBody req = UploadReportRequestBody.builder()
                            .data(Report.builder()
                                .build())
                            .file(File.builder()
                                .fileName("example.file")
                                .content("0xA2Ca85EFA5".getBytes(StandardCharsets.UTF_8))
                                .build())
                            .build();

                    UploadReportResponse res = sdk.reports().uploadReport()
                            .request(req)
                            .call();

                    if (res.uploadedReport().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/reports/changes/{documentChecksum}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getChangesReportSignedUrl
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetChangesReportSignedUrlRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetChangesReportSignedUrlResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetChangesReportSignedUrlRequest req = GetChangesReportSignedUrlRequest.builder()
                            .documentChecksum("<value>")
                            .build();

                    GetChangesReportSignedUrlResponse res = sdk.reports().getChangesReportSignedUrl()
                            .request(req)
                            .call();

                    if (res.signedAccess().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/reports/linting/{documentChecksum}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getLintingReportSignedUrl
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetLintingReportSignedUrlRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetLintingReportSignedUrlResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetLintingReportSignedUrlRequest req = GetLintingReportSignedUrlRequest.builder()
                            .documentChecksum("<value>")
                            .build();

                    GetLintingReportSignedUrlResponse res = sdk.reports().getLintingReportSignedUrl()
                            .request(req)
                            .call();

                    if (res.signedAccess().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/short_urls"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: create
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.operations.CreateRequestBody;
            import dev.speakeasyapi.javaclientsdk.models.operations.CreateResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    CreateRequestBody req = CreateRequestBody.builder()
                            .url("https://probable-heating.com/")
                            .build();

                    CreateResponse res = sdk.shortURLs().create()
                            .request(req)
                            .call();

                    if (res.shortURL().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/subscriptions/{subscriptionID}/{namespaceName}/activate"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: activateSubscriptionNamespace
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.ActivateSubscriptionNamespaceRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.ActivateSubscriptionNamespaceResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    ActivateSubscriptionNamespaceRequest req = ActivateSubscriptionNamespaceRequest.builder()
                            .subscriptionID("<id>")
                            .namespaceName("<value>")
                            .build();

                    ActivateSubscriptionNamespaceResponse res = sdk.subscriptions().activateSubscriptionNamespace()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/subscriptions/{subscriptionID}/{namespaceName}/ignore"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: ignoreSubscriptionNamespace
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.IgnoreSubscriptionNamespaceRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.IgnoreSubscriptionNamespaceResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    IgnoreSubscriptionNamespaceRequest req = IgnoreSubscriptionNamespaceRequest.builder()
                            .subscriptionID("<id>")
                            .namespaceName("<value>")
                            .build();

                    IgnoreSubscriptionNamespaceResponse res = sdk.subscriptions().ignoreSubscriptionNamespace()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/suggest/items"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: suggestItems
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.operations.SuggestItemsResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import dev.speakeasyapi.javaclientsdk.models.shared.SuggestItemsRequestBody;
            import java.lang.Exception;
            import java.util.List;

            public class Application {

                public static void main(String[] args) throws Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    SuggestItemsRequestBody req = SuggestItemsRequestBody.builder()
                            .prompt("<value>")
                            .items(List.of(
                            ))
                            .build();

                    SuggestItemsResponse res = sdk.suggest().suggestItems()
                            .request(req)
                            .call();

                    if (res.strings().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/suggest/openapi"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: suggestOpenAPI
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.operations.Schema;
            import dev.speakeasyapi.javaclientsdk.models.operations.SuggestOpenAPIRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.SuggestOpenAPIRequestBody;
            import dev.speakeasyapi.javaclientsdk.models.operations.SuggestOpenAPIResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;
            import java.nio.charset.StandardCharsets;

            public class Application {

                public static void main(String[] args) throws Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    SuggestOpenAPIRequest req = SuggestOpenAPIRequest.builder()
                            .xSessionId("<id>")
                            .requestBody(SuggestOpenAPIRequestBody.builder()
                                .schema(Schema.builder()
                                    .fileName("example.file")
                                    .content("0x0beEcB7cF6".getBytes(StandardCharsets.UTF_8))
                                    .build())
                                .build())
                            .build();

                    SuggestOpenAPIResponse res = sdk.suggest().suggestOpenAPI()
                            .request(req)
                            .call();

                    if (res.schema().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/suggest/openapi/{namespace_name}/{revision_reference}"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: suggestOpenAPIRegistry
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.operations.SuggestOpenAPIRegistryRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.SuggestOpenAPIRegistryResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    SuggestOpenAPIRegistryRequest req = SuggestOpenAPIRegistryRequest.builder()
                            .namespaceName("<value>")
                            .revisionReference("<value>")
                            .xSessionId("<id>")
                            .build();

                    SuggestOpenAPIRegistryResponse res = sdk.suggest().suggestOpenAPIRegistry()
                            .request(req)
                            .call();

                    if (res.schema().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/suggest/openapi_from_summary"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: suggest
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.operations.SuggestRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.SuggestResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.License;
            import dev.speakeasyapi.javaclientsdk.models.shared.OASInfo;
            import dev.speakeasyapi.javaclientsdk.models.shared.OASSummary;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import dev.speakeasyapi.javaclientsdk.models.shared.SuggestRequestBody;
            import dev.speakeasyapi.javaclientsdk.models.shared.SuggestRequestBodySuggestionType;
            import java.lang.Exception;
            import java.util.List;

            public class Application {

                public static void main(String[] args) throws Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    SuggestRequest req = SuggestRequest.builder()
                            .xSessionId("<id>")
                            .suggestRequestBody(SuggestRequestBody.builder()
                                .oasSummary(OASSummary.builder()
                                    .info(OASInfo.builder()
                                        .title("<value>")
                                        .summary("<value>")
                                        .description("ugh which garrote ashamed sarong fiddle really")
                                        .version("<value>")
                                        .license(License.builder()
                                            .build())
                                        .build())
                                    .operations(List.of(
                                    ))
                                    .build())
                                .suggestionType(SuggestRequestBodySuggestionType.DIAGNOSTICS_ONLY)
                                .diagnostics(List.of(
                                ))
                                .build())
                            .build();

                    SuggestResponse res = sdk.suggest().suggest()
                            .request(req)
                            .call();

                    if (res.schema().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/user"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getUser
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetUserResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetUserResponse res = sdk.auth().getUser()
                            .call();

                    if (res.user().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/workspace"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getWorkspaceByContext
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceByContextResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetWorkspaceByContextResponse res = sdk.workspaces().get()
                            .call();

                    if (res.workspaceAndOrganization().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/workspace"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: createWorkspace
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.CreateWorkspaceResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import dev.speakeasyapi.javaclientsdk.models.shared.Workspace;
            import java.lang.Exception;
            import java.time.OffsetDateTime;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    Workspace req = Workspace.builder()
                            .createdAt(OffsetDateTime.parse("2024-06-17T07:14:55.338Z"))
                            .id("<id>")
                            .name("<value>")
                            .organizationId("<id>")
                            .slug("<value>")
                            .updatedAt(OffsetDateTime.parse("2024-11-30T17:06:07.804Z"))
                            .verified(true)
                            .build();

                    CreateWorkspaceResponse res = sdk.workspaces().create()
                            .request(req)
                            .call();

                    if (res.workspace().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/workspace/access"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getWorkspaceAccess
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceAccessRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceAccessResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetWorkspaceAccessRequest req = GetWorkspaceAccessRequest.builder()
                            .build();

                    GetWorkspaceAccessResponse res = sdk.auth().getAccess()
                            .request(req)
                            .call();

                    if (res.accessDetails().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/workspace/events/targets"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getWorkspaceTargets
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceTargetsRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceTargetsResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetWorkspaceTargetsRequest req = GetWorkspaceTargetsRequest.builder()
                            .build();

                    GetWorkspaceTargetsResponse res = sdk.events().getTargets()
                            .request(req)
                            .call();

                    if (res.targetSDKList().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/workspace/feature_flags"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: setWorkspaceFeatureFlags
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.SetWorkspaceFeatureFlagsResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import dev.speakeasyapi.javaclientsdk.models.shared.WorkspaceFeatureFlag;
            import dev.speakeasyapi.javaclientsdk.models.shared.WorkspaceFeatureFlagRequest;
            import java.lang.Exception;
            import java.util.List;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    WorkspaceFeatureFlagRequest req = WorkspaceFeatureFlagRequest.builder()
                            .featureFlags(List.of(
                                WorkspaceFeatureFlag.SKIP_SCHEMA_REGISTRY,
                                WorkspaceFeatureFlag.WEBHOOKS))
                            .build();

                    SetWorkspaceFeatureFlagsResponse res = sdk.workspaces().setFeatureFlags()
                            .request(req)
                            .call();

                    if (res.workspaceFeatureFlagResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/workspace/{workspace_id}"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getWorkspace
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetWorkspaceRequest req = GetWorkspaceRequest.builder()
                            .workspaceId("<id>")
                            .build();

                    GetWorkspaceResponse res = sdk.workspaces().getByID()
                            .request(req)
                            .call();

                    if (res.workspace().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/workspace/{workspace_id}/details"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: updateWorkspaceDetails
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.UpdateWorkspaceDetailsRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.UpdateWorkspaceDetailsResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import dev.speakeasyapi.javaclientsdk.models.shared.Workspace;
            import java.lang.Exception;
            import java.time.OffsetDateTime;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    UpdateWorkspaceDetailsRequest req = UpdateWorkspaceDetailsRequest.builder()
                            .workspace(Workspace.builder()
                                .createdAt(OffsetDateTime.parse("2025-07-28T19:04:48.565Z"))
                                .id("<id>")
                                .name("<value>")
                                .organizationId("<id>")
                                .slug("<value>")
                                .updatedAt(OffsetDateTime.parse("2024-10-16T10:52:42.015Z"))
                                .verified(true)
                                .build())
                            .workspaceId("<id>")
                            .build();

                    UpdateWorkspaceDetailsResponse res = sdk.workspaces().update()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/workspace/{workspace_id}/events"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: searchWorkspaceEvents
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.SearchWorkspaceEventsRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.SearchWorkspaceEventsResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    SearchWorkspaceEventsRequest req = SearchWorkspaceEventsRequest.builder()
                            .workspaceId("<id>")
                            .build();

                    SearchWorkspaceEventsResponse res = sdk.events().search()
                            .request(req)
                            .call();

                    if (res.cliEventBatch().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/workspace/{workspace_id}/events"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: postWorkspaceEvents
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.PostWorkspaceEventsRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.PostWorkspaceEventsResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.CliEvent;
            import dev.speakeasyapi.javaclientsdk.models.shared.InteractionType;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;
            import java.time.OffsetDateTime;
            import java.util.List;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    PostWorkspaceEventsRequest req = PostWorkspaceEventsRequest.builder()
                            .requestBody(List.of(
                                CliEvent.builder()
                                    .id("<id>")
                                    .executionId("<id>")
                                    .workspaceId("<id>")
                                    .speakeasyApiKeyName("<value>")
                                    .interactionType(InteractionType.QUICKSTART)
                                    .localStartedAt(OffsetDateTime.parse("2024-09-08T05:59:33.876Z"))
                                    .createdAt(OffsetDateTime.parse("2025-08-12T17:54:17.538Z"))
                                    .speakeasyVersion("<value>")
                                    .success(true)
                                    .build()))
                            .workspaceId("<id>")
                            .build();

                    PostWorkspaceEventsResponse res = sdk.events().post()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/workspace/{workspace_id}/events/targets"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getWorkspaceTargetsDeprecated
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceTargetsDeprecatedRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceTargetsDeprecatedResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetWorkspaceTargetsDeprecatedRequest req = GetWorkspaceTargetsDeprecatedRequest.builder()
                            .workspaceId("<id>")
                            .build();

                    GetWorkspaceTargetsDeprecatedResponse res = sdk.events().getTargetsDeprecated()
                            .request(req)
                            .call();

                    if (res.targetSDKList().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/workspace/{workspace_id}/events/targets/{target_id}/events"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getWorkspaceEventsByTarget
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceEventsByTargetRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceEventsByTargetResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetWorkspaceEventsByTargetRequest req = GetWorkspaceEventsByTargetRequest.builder()
                            .targetId("<id>")
                            .workspaceId("<id>")
                            .build();

                    GetWorkspaceEventsByTargetResponse res = sdk.events().getEventsByTarget()
                            .request(req)
                            .call();

                    if (res.cliEventBatch().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/workspace/{workspace_id}/feature_flags"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getWorkspaceFeatureFlags
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceFeatureFlagsRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceFeatureFlagsResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetWorkspaceFeatureFlagsRequest req = GetWorkspaceFeatureFlagsRequest.builder()
                            .workspaceId("<id>")
                            .build();

                    GetWorkspaceFeatureFlagsResponse res = sdk.workspaces().getFeatureFlags()
                            .request(req)
                            .call();

                    if (res.workspaceFeatureFlagResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/workspace/{workspace_id}/settings"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getWorkspaceSettings
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceSettingsRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceSettingsResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetWorkspaceSettingsRequest req = GetWorkspaceSettingsRequest.builder()
                            .workspaceId("<id>")
                            .build();

                    GetWorkspaceSettingsResponse res = sdk.workspaces().getSettings()
                            .request(req)
                            .call();

                    if (res.workspaceSettings().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/workspace/{workspace_id}/settings"]["put"]
    update:
      x-codeSamples:
        - lang: java
          label: updateWorkspaceSettings
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.UpdateWorkspaceSettingsRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.UpdateWorkspaceSettingsResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import dev.speakeasyapi.javaclientsdk.models.shared.WorkspaceSettings;
            import java.lang.Exception;
            import java.time.OffsetDateTime;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    UpdateWorkspaceSettingsRequest req = UpdateWorkspaceSettingsRequest.builder()
                            .workspaceSettings(WorkspaceSettings.builder()
                                .workspaceId("<id>")
                                .webhookUrl("https://last-suspension.info/")
                                .createdAt(OffsetDateTime.parse("2024-12-28T06:46:35.807Z"))
                                .updatedAt(OffsetDateTime.parse("2025-02-03T10:37:56.725Z"))
                                .build())
                            .workspaceId("<id>")
                            .build();

                    UpdateWorkspaceSettingsResponse res = sdk.workspaces().updateSettings()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/workspace/{workspace_id}/team"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getWorkspaceTeam
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceTeamRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceTeamResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetWorkspaceTeamRequest req = GetWorkspaceTeamRequest.builder()
                            .workspaceId("<id>")
                            .build();

                    GetWorkspaceTeamResponse res = sdk.workspaces().getTeam()
                            .request(req)
                            .call();

                    if (res.workspaceTeamResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/workspace/{workspace_id}/team/email/{email}"]["put"]
    update:
      x-codeSamples:
        - lang: java
          label: grantUserAccessToWorkspace
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GrantUserAccessToWorkspaceRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GrantUserAccessToWorkspaceResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GrantUserAccessToWorkspaceRequest req = GrantUserAccessToWorkspaceRequest.builder()
                            .email("Lucinda.Batz8@hotmail.com")
                            .workspaceId("<id>")
                            .build();

                    GrantUserAccessToWorkspaceResponse res = sdk.workspaces().grantAccess()
                            .request(req)
                            .call();

                    if (res.workspaceInviteResponse().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/workspace/{workspace_id}/team/{userId}"]["delete"]
    update:
      x-codeSamples:
        - lang: java
          label: revokeUserAccessToWorkspace
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.RevokeUserAccessToWorkspaceRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.RevokeUserAccessToWorkspaceResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    RevokeUserAccessToWorkspaceRequest req = RevokeUserAccessToWorkspaceRequest.builder()
                            .userId("<id>")
                            .workspaceId("<id>")
                            .build();

                    RevokeUserAccessToWorkspaceResponse res = sdk.workspaces().revokeAccess()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/workspace/{workspace_id}/tokens"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getWorkspaceTokens
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceTokensRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspaceTokensResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetWorkspaceTokensRequest req = GetWorkspaceTokensRequest.builder()
                            .workspaceId("<id>")
                            .build();

                    GetWorkspaceTokensResponse res = sdk.workspaces().getTokens()
                            .request(req)
                            .call();

                    if (res.workspaceTokens().isPresent()) {
                        // handle response
                    }
                }
            }
  - target: $["paths"]["/v1/workspace/{workspace_id}/tokens"]["post"]
    update:
      x-codeSamples:
        - lang: java
          label: createWorkspaceToken
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.CreateWorkspaceTokenRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.CreateWorkspaceTokenResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import dev.speakeasyapi.javaclientsdk.models.shared.WorkspaceToken;
            import java.lang.Exception;
            import java.time.OffsetDateTime;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    CreateWorkspaceTokenRequest req = CreateWorkspaceTokenRequest.builder()
                            .workspaceToken(WorkspaceToken.builder()
                                .id("<id>")
                                .name("<value>")
                                .workspaceId("<id>")
                                .alg("<value>")
                                .key("<key>")
                                .createdAt(OffsetDateTime.parse("2023-08-16T02:33:00.784Z"))
                                .build())
                            .workspaceId("<id>")
                            .build();

                    CreateWorkspaceTokenResponse res = sdk.workspaces().createToken()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/workspace/{workspace_id}/tokens/{tokenID}"]["delete"]
    update:
      x-codeSamples:
        - lang: java
          label: deleteWorkspaceToken
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.DeleteWorkspaceTokenRequest;
            import dev.speakeasyapi.javaclientsdk.models.operations.DeleteWorkspaceTokenResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    DeleteWorkspaceTokenRequest req = DeleteWorkspaceTokenRequest.builder()
                            .tokenID("<id>")
                            .workspaceId("<id>")
                            .build();

                    DeleteWorkspaceTokenResponse res = sdk.workspaces().deleteToken()
                            .request(req)
                            .call();

                    // handle response
                }
            }
  - target: $["paths"]["/v1/workspaces"]["get"]
    update:
      x-codeSamples:
        - lang: java
          label: getWorkspaces
          source: |-
            package hello.world;

            import dev.speakeasyapi.javaclientsdk.RyanTest;
            import dev.speakeasyapi.javaclientsdk.models.errors.Error;
            import dev.speakeasyapi.javaclientsdk.models.operations.GetWorkspacesResponse;
            import dev.speakeasyapi.javaclientsdk.models.shared.Security;
            import java.lang.Exception;

            public class Application {

                public static void main(String[] args) throws Error, Exception {

                    RyanTest sdk = RyanTest.builder()
                            .security(Security.builder()
                                .apiKey("<YOUR_API_KEY_HERE>")
                                .build())
                        .build();

                    GetWorkspacesResponse res = sdk.workspaces().getAll()
                            .call();

                    if (res.workspaces().isPresent()) {
                        // handle response
                    }
                }
            }
