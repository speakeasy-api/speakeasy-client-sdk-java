/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java and JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'signing'
    id 'cl.franciscosolis.sonatype-central-upload' version '1.0.0'
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    withSourcesJar()
    withJavadocJar()
}

//model {
//    tasks.generatePomFileForMavenPublication {
//        destination = file("$buildDir/pom.xml")
//    }
//}
//
jar {
//    dependsOn(":$project.name:generatePomFileForMavenPublication")
    archiveBaseName = 'javaclientsdk'
    into("META-INF/maven/io.github.speakeasy-sdks-staging/javaclientsdk") {
        from("$buildDir/pom.xml")
    }
}

sourcesJar {
    archiveBaseName = 'javaclientsdk'
}

javadocJar {
    archiveBaseName = 'javaclientsdk'
}

javadoc {
    options.encoding = "UTF-8"

    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
    options.addStringOption('Xdoclint:none', '-quiet')
}

group = 'io.github.speakeasy-sdks-staging'
version = '7.0.6'

sonatypeCentralUpload {
    username = System.getenv("SONATYPE_USERNAME")                      // This is your Sonatype generated username
    password = System.getenv("SONATYPE_PASSWORD")                      // This is your sonatype generated password

    // This is a list of files to upload. Ideally you would point to your jar file, source and javadoc jar (required by central)
    archives = files("build/libs/javaclientsdk-${version}.jar", "build/libs/javaclientsdk-${version}-sources.jar", "build/libs/javaclientsdk-${version}-javadoc.jar")
    // This is the pom file to upload. This is required by central
    pom = file("build/pom.xml")

    signingKey = System.getenv("SONATYPE_PRIVATE_KEY")
    // This is your PGP private key. This is required to sign your files
    signingKeyPassphrase = System.getenv("SIGNING_KEY_PASSPHRASE")
//    signingKeyPassphrase = "..."
//    // This is your PGP private key passphrase (optional) to decrypt your private key
//    publicKey = "--BEGIN PGP PUBLIC KEY BLOCK--"
    // This is your PGP public key (optional). To distribute later to verify your deployments.
}

//publishing {
//    repositories {
//        maven {
//            name = "OSSRH"
//            url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
//            credentials {
//                username = System.getenv("MAVEN_USERNAME")
//                password = System.getenv("MAVEN_PASSWORD")
//            }
//        }
//    }
//    publications {
//        maven(MavenPublication) {
//            groupId = 'dev.speakeasyapi'
//            artifactId = 'javaclientsdk'
//            version = '7.0.5'
//
//            from components.java
//
//            pom {
//                name = 'Speakeasy Java SDK'
//                description = 'SDK enabling Java developers to easily integrate with the Speakeasy API.'
//                url = 'https://github.com/speakeasy-api/speakeasy-client-sdk-java'
//                scm {
//                    url = 'github.com/speakeasy-api/speakeasy-client-sdk-java'
//                    connection = 'scm:git:ssh://git@github.com/speakeasy-api/speakeasy-client-sdk-java.git'
//                }
//                licenses {
//                    license {
//                        name = 'The MIT License (MIT)'
//                        url = 'https://mit-license.org/'
//                    }
//                }
//                developers {
//                    developer {
//                        name = 'Speakeasy'
//                        organization = 'Speakeasy'
//                        email = 'chase@speakeasyapi.dev'
//                    }
//                }
//                organization {
//                    name = 'Speakeasy'
//                    url = 'www.speakeasyapi.dev'
//                }
//            }
//        }
//    }
//}

//if (!project.hasProperty('skip.signing')) {
//    signing {
//        def signingKey = findProperty("signingKey")
//        def signingPassphrase = findProperty("signingPassphrase")
//        useInMemoryPgpKeys(signingKey, signingPassphrase)
//        sign publishing.publications.maven
//    }
//}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.16.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.16.1'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'org.apache.httpcomponents:httpmime:4.5.14'
    implementation 'commons-io:commons-io:2.15.1'
}

